{"id":"../../node_modules/remotedev-serialize/immutable/serialize.js","dependencies":[{"name":"/home/shy/code/puemos/hls-downloader-chrome-extension/package.json","includedInParent":true,"mtime":1578255291486},{"name":"/home/shy/code/puemos/hls-downloader-chrome-extension/node_modules/remotedev-serialize/package.json","includedInParent":true,"mtime":1578252446802},{"name":"../helpers","loc":{"line":1,"column":22},"parent":"/home/shy/code/puemos/hls-downloader-chrome-extension/node_modules/remotedev-serialize/immutable/serialize.js","resolved":"/home/shy/code/puemos/hls-downloader-chrome-extension/node_modules/remotedev-serialize/helpers/index.js"},{"name":"../constants/options","loc":{"line":5,"column":21},"parent":"/home/shy/code/puemos/hls-downloader-chrome-extension/node_modules/remotedev-serialize/immutable/serialize.js","resolved":"/home/shy/code/puemos/hls-downloader-chrome-extension/node_modules/remotedev-serialize/constants/options.js"}],"generated":{"js":"var helpers = require('../helpers');\nvar mark = helpers.mark;\nvar extract = helpers.extract;\nvar refer = helpers.refer;\nvar options= require('../constants/options');\n\nmodule.exports = function serialize(Immutable, refs, customReplacer, customReviver) {\n  function replacer(key, value) {\n    if (value instanceof Immutable.Record) return refer(value, 'ImmutableRecord', 'toObject', refs);\n    if (value instanceof Immutable.Range) return extract(value, 'ImmutableRange');\n    if (value instanceof Immutable.Repeat) return extract(value, 'ImmutableRepeat');\n    if (Immutable.OrderedMap.isOrderedMap(value)) return mark(value, 'ImmutableOrderedMap', 'toObject');\n    if (Immutable.Map.isMap(value)) return mark(value, 'ImmutableMap', 'toObject');\n    if (Immutable.List.isList(value)) return mark(value, 'ImmutableList', 'toArray');\n    if (Immutable.OrderedSet.isOrderedSet(value)) return mark(value, 'ImmutableOrderedSet', 'toArray');\n    if (Immutable.Set.isSet(value)) return mark(value, 'ImmutableSet', 'toArray');\n    if (Immutable.Seq.isSeq(value)) return mark(value, 'ImmutableSeq', 'toArray');\n    if (Immutable.Stack.isStack(value)) return mark(value, 'ImmutableStack', 'toArray');\n    return value;\n  }\n\n  function reviver(key, value) {\n    if (typeof value === 'object' && value !== null && '__serializedType__'  in value) {\n      var data = value.data;\n      switch (value.__serializedType__) {\n        case 'ImmutableMap': return Immutable.Map(data);\n        case 'ImmutableOrderedMap': return Immutable.OrderedMap(data);\n        case 'ImmutableList': return Immutable.List(data);\n        case 'ImmutableRange': return Immutable.Range(data._start, data._end, data._step);\n        case 'ImmutableRepeat': return Immutable.Repeat(data._value, data.size);\n        case 'ImmutableSet': return Immutable.Set(data);\n        case 'ImmutableOrderedSet': return Immutable.OrderedSet(data);\n        case 'ImmutableSeq': return Immutable.Seq(data);\n        case 'ImmutableStack': return Immutable.Stack(data);\n        case 'ImmutableRecord':\n          return refs && refs[value.__serializedRef__]\n            ? new refs[value.__serializedRef__](data)\n            : Immutable.Map(data);\n        default: return data;\n      }\n    }\n    return value;\n  }\n\n  return {\n    replacer: customReplacer\n      ? function(key, value) {\n        return customReplacer(key, value, replacer);\n      }\n      : replacer,\n    reviver: customReviver\n      ? function(key, value) {\n        return customReviver(key, value, reviver);\n      }\n      : reviver,\n    options: options\n  }   \n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/remotedev-serialize/immutable/serialize.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}}],"sources":{"../../node_modules/remotedev-serialize/immutable/serialize.js":"var helpers = require('../helpers');\nvar mark = helpers.mark;\nvar extract = helpers.extract;\nvar refer = helpers.refer;\nvar options= require('../constants/options');\n\nmodule.exports = function serialize(Immutable, refs, customReplacer, customReviver) {\n  function replacer(key, value) {\n    if (value instanceof Immutable.Record) return refer(value, 'ImmutableRecord', 'toObject', refs);\n    if (value instanceof Immutable.Range) return extract(value, 'ImmutableRange');\n    if (value instanceof Immutable.Repeat) return extract(value, 'ImmutableRepeat');\n    if (Immutable.OrderedMap.isOrderedMap(value)) return mark(value, 'ImmutableOrderedMap', 'toObject');\n    if (Immutable.Map.isMap(value)) return mark(value, 'ImmutableMap', 'toObject');\n    if (Immutable.List.isList(value)) return mark(value, 'ImmutableList', 'toArray');\n    if (Immutable.OrderedSet.isOrderedSet(value)) return mark(value, 'ImmutableOrderedSet', 'toArray');\n    if (Immutable.Set.isSet(value)) return mark(value, 'ImmutableSet', 'toArray');\n    if (Immutable.Seq.isSeq(value)) return mark(value, 'ImmutableSeq', 'toArray');\n    if (Immutable.Stack.isStack(value)) return mark(value, 'ImmutableStack', 'toArray');\n    return value;\n  }\n\n  function reviver(key, value) {\n    if (typeof value === 'object' && value !== null && '__serializedType__'  in value) {\n      var data = value.data;\n      switch (value.__serializedType__) {\n        case 'ImmutableMap': return Immutable.Map(data);\n        case 'ImmutableOrderedMap': return Immutable.OrderedMap(data);\n        case 'ImmutableList': return Immutable.List(data);\n        case 'ImmutableRange': return Immutable.Range(data._start, data._end, data._step);\n        case 'ImmutableRepeat': return Immutable.Repeat(data._value, data.size);\n        case 'ImmutableSet': return Immutable.Set(data);\n        case 'ImmutableOrderedSet': return Immutable.OrderedSet(data);\n        case 'ImmutableSeq': return Immutable.Seq(data);\n        case 'ImmutableStack': return Immutable.Stack(data);\n        case 'ImmutableRecord':\n          return refs && refs[value.__serializedRef__]\n            ? new refs[value.__serializedRef__](data)\n            : Immutable.Map(data);\n        default: return data;\n      }\n    }\n    return value;\n  }\n\n  return {\n    replacer: customReplacer\n      ? function(key, value) {\n        return customReplacer(key, value, replacer);\n      }\n      : replacer,\n    reviver: customReviver\n      ? function(key, value) {\n        return customReviver(key, value, reviver);\n      }\n      : reviver,\n    options: options\n  }   \n};\n"},"lineCount":59}},"error":null,"hash":"8ee220067855d453e65fd3951c169d51","cacheData":{"env":{}}}